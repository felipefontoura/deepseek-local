x-n8n-base: &n8n-base
  image: n8nio/n8n:latest
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=postgres
    - DB_POSTGRESDB_PASSWORD=secret
    - DB_POSTGRESDB_NAME=n8n
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=false
    - N8N_ENCRYPTION_KEY=secret-key
    - N8N_USER_MANAGEMENT_JWT_SECRET=more-secret-key
  volumes:
    - n8n-data:/home/node/.n8n
    - ./n8n/credentials:/credentials
    - ./n8n/workflows:/workflows
  depends_on:
    - ollama-server
    - qdrant
    - postgres
  networks:
    - ollama-demo

services:
  ollama-server:
    # profiles: ["gpu-nvidia"]
    container_name: ollama-server
    image: ollama/ollama:latest
    environment:
      - OLLAMA_HOST=0.0.0.0
    ports:
      - "11434:11434"
    volumes:
      - ollama-model-cache:/root/.ollama
    restart: always
    networks:
      - ollama-demo
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities:
    #             - gpu

  ollama-init:
    image: ollama/ollama:latest
    container_name: ollama-server-pull-deepseek
    volumes:
      - ollama-model-cache:/root/.ollama
    entrypoint: /bin/sh
    command:
      - "-c"
      - "sleep 3; OLLAMA_HOST=ollama-server:11434 ollama pull deepseek-r1:7b"
    networks:
      - ollama-demo

  openweb-ui:
    container_name: openweb-ui
    image: ghcr.io/open-webui/open-webui:main # ghcr.io/open-webui/open-webui:cuda for GPU support
    depends_on:
      - ollama-server
    ports:
      - "3000:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama-server:11434
    volumes:
      - open-webui-data:/app/backend/data
    restart: always
    networks:
      - ollama-demo

  n8n:
    <<: *n8n-base
    container_name: n8n
    ports:
      - "5678:5678"
    restart: always

  n8n-import:
    <<: *n8n-base
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/credentials && n8n import:workflow --separate --input=/workflows"

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=n8n
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U postgres -d n8n"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: always
    networks:
      - ollama-demo

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - 6333:6333
      - 6334:6334
    environment:
      - QDRANT__SERVICE__API_KEY=secret
    volumes:
      - qdrant-data:/qdrant/storage
    restart: always
    networks:
      - ollama-demo

volumes:
  ollama-model-cache:
  open-webui-data:
  n8n-data:
  postgres-data:
  qdrant-data:

networks:
  ollama-demo:
